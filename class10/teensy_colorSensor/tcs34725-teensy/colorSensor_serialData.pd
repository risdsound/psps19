#N canvas 641 23 1019 681 10;
#X msg 55 169 close;
#X obj 37 14 cnv 15 440 60 empty empty empty 20 12 0 14 -200075 -66577
0;
#X msg 44 142 devices;
#X floatatom 104 150 5 0 0 0 - - -;
#X msg 104 169 open \$1;
#X obj 44 256 s;
#X obj 44 234 serial_print any;
#X obj 44 212 comport 1 9600;
#X floatatom 216 381 15 0 0 1 red - -;
#X floatatom 216 404 15 0 0 1 green - -;
#X floatatom 216 427 15 0 0 1 blue - -;
#X text 46 88 Requires [comport] object \; install under Help > Find
Externals, f 72;
#X obj 43 300 r color_values:;
#X floatatom 216 450 15 0 0 1 clear - -;
#X floatatom 216 473 15 0 0 1 color_temperature - -;
#X floatatom 216 496 15 0 0 1 lux - -;
#X floatatom 220 566 15 0 0 1 hue - -;
#X obj 43 334 unpack f f f f f f f f f;
#X floatatom 220 600 15 0 0 1 saturation - -;
#X floatatom 220 634 15 0 0 1 lightness - -;
#X text 424 587 HSL implementation is very rough in the Teensy code
example \, and it is likely that the sensor requires some calibration
for accuracy. However this might provide some useable data;
#X text 427 415 Raw data from TCS34725 color sensor from Adafruit \;
https://www.adafruit.com/product/1334;
#X text 44 22 [serial_print]: abstraction that works with Arduinos'
Serial.print() and Serial.println() functions (with the use of [comport]).
It was written by Alexandros Drymonitis. \; See https://github.com/alexdrymonitis/Arduino_Pd
;
#X connect 0 0 7 0;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 7 0;
#X connect 6 0 5 0;
#X connect 6 1 5 1;
#X connect 7 0 6 0;
#X connect 12 0 17 0;
#X connect 17 0 8 0;
#X connect 17 1 9 0;
#X connect 17 2 10 0;
#X connect 17 3 13 0;
#X connect 17 4 14 0;
#X connect 17 5 15 0;
#X connect 17 6 16 0;
#X connect 17 7 18 0;
#X connect 17 8 19 0;
